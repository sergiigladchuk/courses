u <- c(1:5, TRUE)                  # here numeric is the lowest type
z <- c(1:5, TRUE, 'atextstring')   # lowest type here is character so everything
n <- c(a=1, b=4, c=56)             # named elements
n
X <- matrix(c(4, 7, 3, 8, 9, 2), nrow = 3)      # data entered column-wise
Y <- matrix(c(4, 7, 3, 8, 9, 2), nrow = 3, byrow = TRUE) # data entered row-wise
Z <- matrix(c(4, 7, 3, 8, 9, 2), ncol = 3)
TY <- t(Y)
TY
Y
Z2 <- matrix(c(4, 7, 3, 8, 9, 2), ncol = 3,
dimnames=list(c('row1', 'row2'), c('col1', 'col2', 'col3')))
Z2
x
x[3]    # gets the 3rd element of vector x
x <- c(2, 1, 7, 4, 34)      # c() means combine
x <- c(1:5, x, 56)          # we can combine numbers with the vector object x
x
x[3]    # gets the 3rd element of vector x
x[c(1, 5, 6)] # indexing by a vector, gets element number 1 5 and 6 in vector x
x[x > 3]      # indexing by a logical vector
x[x==1]   # another example
x[]     # gets all elements of vector x; is basically the same as writing x
x[-3]   # gets everything in x BUT the third element
X[2, 1] # gets the element in row 2 column 1 of matrix X
X[, 2]  # gets all elements in column 2 of matrix X
X[2, ]  # gets all elements of row 2 of matrix X
L <- list(a=1, b=1:3, c=matrix(1:4, 2), d=x > 4, e=y)   # Note that we can have
y <- c('I', 'think', 'programming', 'is', 'fun') # a vector of character strings
L <- list(a=1, b=1:3, c=matrix(1:4, 2), d=x > 4, e=y)   # Note that we can have
L
length(L)       # Try to understand why the length of the list is what it is...
Names <- c('Martin', 'Emily', 'Katharina', 'Nicholas', 'Susanne', 'Mikael',
'Ã…ke', 'Annelie')
ID <- c(37, 20, 2, 5, 11, 17, 22, 13)
Gender <- c('Male', 'Female', 'Female', 'Male', 'Female', 'Male',
'Male', 'Female')
set.seed(1234)
Score <- runif(8, 5, 20)           # Some random scores from a uniform
?plot
x <- rnorm(20)
plot(1:20, x, type='S')
for(i in 2:19) {
if (x[i-1] < x[i] && x[i+1] < x[i]) {
cat('Found maximum at',i,fill=T)
points(i,x[i],col='red')
}
}
x <- rnorm(20)
plot(1:20, x, type='b')
for(i in 2:19) {
if (x[i-1] < x[i] && x[i+1] < x[i]) {
cat('Found maximum at',i,fill=T)
points(i,x[i],col='red')
}
}
phi <- seq(0, 2*pi, length.out=10)
x <- cos(phi)
y <- sin(phi)
plot(NA,NA,xlim=c(-1,1), ylim=c(-1,1), type='n', xlab='',ylab='')
polygon(x,y,col='red')
phi <- seq(0, 2*pi, length.out=9)
x <- cos(phi)
y <- sin(phi)
plot(NA,NA,xlim=c(-1,1), ylim=c(-1,1), type='n', xlab='',ylab='')
polygon(x,y,col='red')
phi <- seq(0, 2*pi, length.out=6)
x <- cos(phi)
y <- sin(phi)
plot(NA,NA,xlim=c(-1,1), ylim=c(-1,1), type='n', xlab='',ylab='')
polygon(x,y,col='red')
phi <- seq(0, 2*pi, length.out=7)
x <- cos(phi)
y <- sin(phi)
plot(NA,NA,xlim=c(-1,1), ylim=c(-1,1), type='n', xlab='',ylab='')
polygon(x,y,col='red')
op <- par(mfrow=c(1,2))
plot(sin, -5, 5, main='The sinus function')
plot(cos, -5, 5, main='The cosinus function')
par(op)
phi <- seq(0, 2*pi, length.out=7)
x <- cos(phi)
y <- sin(phi)
plot(NA,NA,xlim=c(-1,1), ylim=c(-1,1), type='n', xlab='',ylab='')
polygon(x,y,col='red')
X <- matrix(runif(100),10,10)
image(X)
contour(X)
persp(X, phi=40)
setwd("~/Documents/courses/stats/Ex_5")
RMfor.csv <- read.csv()
RMfor.csv <- read.csv('RMfor.csv')
RMfor.csv <- read.csv('RMfor.csv',sep=';')
RMfor <- read.csv('RMfor.csv',sep=';')
str(RMfor)
View(RMfor)
fit.RMfor <- lm(RMfor$lime~RMfor$birch)
RMfor$pred.bir <- fitted(fit.RMfor)
View(RMfor)
library(lmodel2)
install.packages("lmodel2")
library(lmodel2)
lmodel2(RMfor$lime~RMfor$birch, data=NULL, range.y=NULL, range.x=NULL, nperm=0)
fit.MA <- lmodel2(RMfor$lime~RMfor$birch, nperm=99)
fit.MA <- lmodel2(RMfor$lime~RMfor$birch, nperm=99)
fit.MA <- lmodel2(RMfor$lime~RMfor$birch, data=RMfor, nperm=99)
fit.MA <- lmodel2(lime~birch, data=RMfor, nperm=99)
fit.MA <- lmodel2(lime~birch, data=RMfor,
range.y=NULL, range.x=NULL, nperm=99)
fit.MA <- lmodel2(lime~birch, data=RMfor,
range.y=NULL, range.x=NULL, nperm=NULL)
fit.MA <- lmodel2(lime~birch, data=RMfor,
range.y=NULL, range.x=NULL, nperm=0)
fit.MA <- lmodel2(RMfor$lime~RMfor$birch, data=RMfor,
range.y=NULL, range.x=NULL, nperm=0)
lmodel2(RMfor$lime~RMfor$birch, data=RMfor,
range.y=NULL, range.x=NULL, nperm=0)
lmodel2(RMfor$lime~RMfor$birch, data=RMfor,
range.y=NULL, range.x=NULL, nperm=0)
lmodel2(RMfor$lime~RMfor$birch, data=RMfor,
range.y=NULL, range.x=NULL, nperm=0)
lmodel2(RMfor$lime~RMfor$birch, data=RMfor,
range.y=NULL, range.x=NULL, nperm=99)
lmodel2(RMfor$lime~RMfor$birch, data=RMfor,
nperm=99)
lmodel2(lime~birch, data=RMfor,
nperm=99)
fit.MA <- lmodel2(lime~birch, data=RMfor, nperm=99)
fit.MA <- lmodel2(lime~birch, data=RMfor,
nperm=99)
plot(fit.MA)
plot(fit.MA, method="MA")
resTable <- fit.MA$regression.results
View(resTable)
intMA <- resTable[2,2]
RMfor$pred.bir.MA <- intMA + RMfor$birch*slopeMA
slopeMA <- resTabe[2,3]
RMfor$pred.bir.MA <- intMA + RMfor$birch*slopeMA
slopeMA <- resTable[2,3]
RMfor$pred.bir.MA <- intMA + RMfor$birch*slopeMA
intOLS <- resTable[1,2]
slopeOLS <- resTable[1,3]
RMfor$pred.bir.OLS <- intOLS + RMfor$birch*slopeOLS
intSMA <- resTable[3,2]
slopeSMA <- resTable[3,3]
RMfor$pred.bir.SMA <- intSMA + RMfor$birch*slopeSMA
plot(RMfor$pred.bir~RMfor$birch)
points(RMfor$pred.bir.MA,col="red")
points(RMfor$pred.bir.MA, col="red")
plot(RMfor$pred.bir~RMfor$birch)
points(RMfor$pred.bir.MA, col="red")
points(RMfor$pred.bir.MA)
points(RMfor$pred.bir.SMA)
points(RMfor$pred.bir.OLS)
summary(fit.RMfor)
fit.MA
points(RMfor$pred.bir.MA~RMfor$birch, col="green")
points(RMfor$pred.bir.OLS~RMfor$birch, col="red")
points(RMfor$pred.bir.SMA~RMfor$birch, col="blue")
