u <- c(1:5, TRUE)                  # here numeric is the lowest type
z <- c(1:5, TRUE, 'atextstring')   # lowest type here is character so everything
n <- c(a=1, b=4, c=56)             # named elements
n
X <- matrix(c(4, 7, 3, 8, 9, 2), nrow = 3)      # data entered column-wise
Y <- matrix(c(4, 7, 3, 8, 9, 2), nrow = 3, byrow = TRUE) # data entered row-wise
Z <- matrix(c(4, 7, 3, 8, 9, 2), ncol = 3)
TY <- t(Y)
TY
Y
Z2 <- matrix(c(4, 7, 3, 8, 9, 2), ncol = 3,
dimnames=list(c('row1', 'row2'), c('col1', 'col2', 'col3')))
Z2
x
x[3]    # gets the 3rd element of vector x
x <- c(2, 1, 7, 4, 34)      # c() means combine
x <- c(1:5, x, 56)          # we can combine numbers with the vector object x
x
x[3]    # gets the 3rd element of vector x
x[c(1, 5, 6)] # indexing by a vector, gets element number 1 5 and 6 in vector x
x[x > 3]      # indexing by a logical vector
x[x==1]   # another example
x[]     # gets all elements of vector x; is basically the same as writing x
x[-3]   # gets everything in x BUT the third element
X[2, 1] # gets the element in row 2 column 1 of matrix X
X[, 2]  # gets all elements in column 2 of matrix X
X[2, ]  # gets all elements of row 2 of matrix X
L <- list(a=1, b=1:3, c=matrix(1:4, 2), d=x > 4, e=y)   # Note that we can have
y <- c('I', 'think', 'programming', 'is', 'fun') # a vector of character strings
L <- list(a=1, b=1:3, c=matrix(1:4, 2), d=x > 4, e=y)   # Note that we can have
L
length(L)       # Try to understand why the length of the list is what it is...
Names <- c('Martin', 'Emily', 'Katharina', 'Nicholas', 'Susanne', 'Mikael',
'Ã…ke', 'Annelie')
ID <- c(37, 20, 2, 5, 11, 17, 22, 13)
Gender <- c('Male', 'Female', 'Female', 'Male', 'Female', 'Male',
'Male', 'Female')
set.seed(1234)
Score <- runif(8, 5, 20)           # Some random scores from a uniform
?plot
x <- rnorm(20)
plot(1:20, x, type='S')
for(i in 2:19) {
if (x[i-1] < x[i] && x[i+1] < x[i]) {
cat('Found maximum at',i,fill=T)
points(i,x[i],col='red')
}
}
x <- rnorm(20)
plot(1:20, x, type='b')
for(i in 2:19) {
if (x[i-1] < x[i] && x[i+1] < x[i]) {
cat('Found maximum at',i,fill=T)
points(i,x[i],col='red')
}
}
phi <- seq(0, 2*pi, length.out=10)
x <- cos(phi)
y <- sin(phi)
plot(NA,NA,xlim=c(-1,1), ylim=c(-1,1), type='n', xlab='',ylab='')
polygon(x,y,col='red')
phi <- seq(0, 2*pi, length.out=9)
x <- cos(phi)
y <- sin(phi)
plot(NA,NA,xlim=c(-1,1), ylim=c(-1,1), type='n', xlab='',ylab='')
polygon(x,y,col='red')
phi <- seq(0, 2*pi, length.out=6)
x <- cos(phi)
y <- sin(phi)
plot(NA,NA,xlim=c(-1,1), ylim=c(-1,1), type='n', xlab='',ylab='')
polygon(x,y,col='red')
phi <- seq(0, 2*pi, length.out=7)
x <- cos(phi)
y <- sin(phi)
plot(NA,NA,xlim=c(-1,1), ylim=c(-1,1), type='n', xlab='',ylab='')
polygon(x,y,col='red')
op <- par(mfrow=c(1,2))
plot(sin, -5, 5, main='The sinus function')
plot(cos, -5, 5, main='The cosinus function')
par(op)
phi <- seq(0, 2*pi, length.out=7)
x <- cos(phi)
y <- sin(phi)
plot(NA,NA,xlim=c(-1,1), ylim=c(-1,1), type='n', xlab='',ylab='')
polygon(x,y,col='red')
X <- matrix(runif(100),10,10)
image(X)
contour(X)
persp(X, phi=40)
setwd("~/Documents/courses/stats/Ex_3")
succ <- read.csv("succ.csv")
str(succ)
hist(succ)
hist(succ$succ)
xfit <- seq(min(succ$succ),max(succ$succ),length(40))
xfit <- dnorm(xfit,mean=mean(succ$succ),sd=sd(succ$succ))
lines(xfit,yfit, col='blue', lwd=2)
xfit <- seq(min(succ$succ),max(succ$succ),length(40))
yfit <- dnorm(xfit,mean=mean(succ$succ),sd=sd(succ$succ))
lines(xfit,yfit, col='blue', lwd=2)
xfit <- seq(min(succ$succ),max(succ$succ),length(40))
yfit <- dnorm(xfit,mean=mean(succ$succ),sd=sd(succ$succ))
yfit <- yfit*diff(h$mids[1:2])*length(succ$succ)
lines(xfit,yfit, col='blue', lwd=2)
h <- hist(succ$succ, breaks=10)
xfit <- seq(min(succ$succ),max(succ$succ),length(40))
yfit <- dnorm(xfit,mean=mean(succ$succ),sd=sd(succ$succ))
yfit <- yfit*diff(h$mids[1:2])*length(succ$succ)
lines(xfit,yfit, col='blue', lwd=2)
xfit <- seq(min(succ$succ),max(succ$succ),length(10))
yfit <- dnorm(xfit,mean=mean(succ$succ),sd=sd(succ$succ))
yfit <- yfit*diff(h$mids[1:2])*length(succ$succ)
lines(xfit,yfit, col='blue', lwd=2)
xfit <- seq(min(succ$succ),max(succ$succ),length(2))
yfit <- dnorm(xfit,mean=mean(succ$succ),sd=sd(succ$succ))
yfit <- yfit*diff(h$mids[1:2])*length(succ$succ)
lines(xfit,yfit, col='blue', lwd=2)
xfit <- seq(min(succ$succ),max(succ$succ),length=40)
yfit <- dnorm(xfit,mean=mean(succ$succ),sd=sd(succ$succ))
yfit <- yfit*diff(h$mids[1:2])*length(succ$succ)
lines(xfit,yfit, col='blue', lwd=2)
h <- hist(succ$succ, breaks=10)
#adding norm curve
xfit <- seq(min(succ$succ),max(succ$succ),length=20)
yfit <- dnorm(xfit,mean=mean(succ$succ),sd=sd(succ$succ))
yfit <- yfit*diff(h$mids[1:2])*length(succ$succ)
lines(xfit,yfit, col='blue', lwd=2)
xfit <- seq(min(succ$succ),max(succ$succ),length=2)
yfit <- dnorm(xfit,mean=mean(succ$succ),sd=sd(succ$succ))
yfit <- yfit*diff(h$mids[1:2])*length(succ$succ)
lines(xfit,yfit, col='blue', lwd=2)
xfit <- seq(min(succ$succ),max(succ$succ),length=100)
yfit <- dnorm(xfit,mean=mean(succ$succ),sd=sd(succ$succ))
yfit <- yfit*diff(h$mids[1:2])*length(succ$succ)
lines(xfit,yfit, col='blue', lwd=2)
xfit <- seq(min(succ$succ),max(succ$succ),length=40)
yfit <- dnorm(xfit,mean=mean(succ$succ),sd=sd(succ$succ))
yfit <- yfit*diff(h$mids[1:2])*length(succ$succ)
lines(xfit,yfit, col='blue', lwd=2)
h <- hist(succ$succ, breaks=10)
#adding norm curve
xfit <- seq(min(succ$succ),max(succ$succ),length=40)
yfit <- dnorm(xfit,mean=mean(succ$succ),sd=sd(succ$succ))
yfit <- yfit*diff(h$mids[1:2])*length(succ$succ)
lines(xfit,yfit, col='blue', lwd=2)
aveSucc <- aggregate(succ$succ, by=succ, FUN = mean)
view(aveSucc)
View(aveSucc)
aveSucc <- aggregate(succ$succ, list(succ$year), mean)
View(aveSucc)
colnames(aveSucc) <- c('year', 'aveSucc')
View(aveSucc)
hist(aveSucc$aveSucc)
aveH <- hist(aveSucc$aveSucc, breaks=10)
xfit <- seq(min(aveSucc$aveSucc),max(aveSucc$aveSucc),length=40)
yfit <- dnorm(xfit,mean=mean(aveSucc$aveSucc),sd=sd(aveSucc$aveSucc))
yfit <- yfit*diff(aveH$mids[1:2])*length(aveSucc$aveSucc)
lines(xfit,yfit, col='blue', lwd=2)
aveH <- hist(aveSucc$aveSucc, breaks=10, main = 'Example of Central Limit theorem')
xfit <- seq(min(aveSucc$aveSucc),max(aveSucc$aveSucc),length=40)
yfit <- dnorm(xfit,mean=mean(aveSucc$aveSucc),sd=sd(aveSucc$aveSucc))
yfit <- yfit*diff(aveH$mids[1:2])*length(aveSucc$aveSucc)
lines(xfit,yfit, col='blue', lwd=2)
runif(1)
runif(1)
runif(1)
runif(1)
runif(p=0.2)
rbinom(1,1,0.2)
rbinom(1,1,0.2)
rbinom(size=1,prob=0.2)
rbinom(n=1,size=1,prob=0.2)
rbinom(n=1,size=1,prob=0.2)
rbinom(n=1,size=1,prob=0.2)
rbinom(n=1,size=1,prob=0.2)
rbinom(n=1,size=30,prob=0.2)
rbinom(n=30,size=30,prob=0.2)
binom <- rbinom(900, 1, 0.2)
dim(binom) <- c(30,30)
binom <- as.data.frame(binom)
View(binom)
means <- mean(binom)
means <- mean(binom$V1)
means <- sapply(binom,mean)
View(means)
means
means <- sapply(binom,mean,na.rm=TRUE)
stdevs <- sapply(binom,sd,na.rm=TRUE)
stdevs
sdOfMeans <- sd(means)
sdOfMeans
sdOfMeans2 <- stdevs/sqrt(30)
sdOfMeans2
sdExact <- sqrt(1*0.2*(1-0.2))
errorExact <- sdExact/sqrt(30)
errorExact
Normal <- rnorm(900, 5, 3)
dim(Normal) <- c(30,30)
Normal <- as.data.frame(Normal)
View(Normal)
Normal.means <- sapply(Normal,mean,na.rm=TRUE)
Normal.means
#means are arount 0.2
Normal.stdevs <- sapply(Normal,sd,na.rm=TRUE)
Normal.stdevs
#st deviation of the means
Normal.sdOfMeans <- sd(Normal.means)
Normal.sdOfMeans
#st deviation from columns
Normal.sdOfMeans2 <- Normal.stdevs/sqrt(30)
Normal.sdOfMeans2
norm <- Normal
norm10 <- norm[,1:10]
norm.corr <- cor(norm10, y = NULL, use = "everything", method = "pearson")
str(norm.corr)
norm.corr
norm10
library(Hmisc)
installed.packages(Hmisc)
install.packages("Hmisc")
library("Hmisc", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
rcorr(as.matrix(norm10), type="pearson")
setwd("~/Documents/courses/stats/Ex_1")
read.csv("tits.csv")
tits <- read.csv("tits.csv")
rm(list=ls())
tits <- read.csv("tits.csv")
str(tits)
boxplot(tits$egg~tits$wei)
boxplot(tits$egg)
boxplot(tits$wei~tits$SPE, xlab='Species', ylab='Weight')
boxplot(tits$egg~tits$SPE, xlab='Species', ylab='EggWeigh')
summary(tits)
apply(tits[,2:3], 2, FUN=mean, na.rm=TRUE)
TX <- subset(tits, SPE='TX')
TX <- subset(tits, tits$SPE='TX')
TX <- subset(tits, tits$SPE=='TX')
TX <- subset(tits, SPE=='TX')
tits
BM <- subset(tits, SPE=='BM')
BM
se.wei.TX <-(sd(TX&wei, na.rm=TRUE))/(sqrt(length(na.omit(TX$wei))))
View(TX)
se.wei.TX <-(sd(TX$wei, na.rm=TRUE))/(sqrt(length(na.omit(TX$wei))))
se.wei.BM <-(sd(BM$wei, na.rm=TRUE))/(sqrt(length(na.omit(BM$wei))))
se.egg <- cbind(se.wei.TX, se.wei.BM)
#get all the means and Standard errors
mean.wei.TX <-(mean(TX$wei, na.rm=TRUE))
mean.wei.BM <-(mean(BM$wei, na.rm=TRUE))
mean.egg.TX <-(mean(TX$egg, na.rm=TRUE))
mean.egg.BM <-(mean(BM$egg, na.rm=TRUE))
se.wei.TX <-(sd(TX$wei, na.rm=TRUE))/(sqrt(length(na.omit(TX$wei))))
se.wei.BM <-(sd(BM$wei, na.rm=TRUE))/(sqrt(length(na.omit(BM$wei))))
se.egg.TX <-(sd(TX$egg, na.rm=TRUE))/(sqrt(length(na.omit(TX$egg))))
se.egg.BM <-(sd(BM$egg, na.rm=TRUE))/(sqrt(length(na.omit(BM$egg))))
se.wei <- cbind(se.wei.TX, se.wei.BM)
se.egg <- cbing(se.egg.TX, se.egg.BM)
mean.wei <- cbind(mean.wei.TX, mean.wei.BM)
mean.egg <- cbing(mean.egg.TX, mean.egg.BM)
mean.egg <- cbind(mean.egg.TX, mean.egg.BM)
x <- c(1:2)
plot(x, mean.egg, type='b', lty=0, xlim=c(0.5, 2.5),
xlab="Species", ylim=c(0, 14), ylab="Eggs", axes=FALSE)
axis(1, at=c(0.5, 1, 2, 2.5), labels=c("","Great tit", "Blue tit",  ""))
axis(2, at=seq(0, 14, 2))
errbar(x, mean.egg, mean.egg + se.egg, mean.egg - se.egg, add=TRUE)
mean.wei.TX <-(mean(TX$wei, na.rm=TRUE))
mean.wei.BM <-(mean(BM$wei, na.rm=TRUE))
mean.egg.TX <-(mean(TX$egg, na.rm=TRUE))
mean.egg.BM <-(mean(BM$egg, na.rm=TRUE))
se.wei.TX <-(sd(TX$wei, na.rm=TRUE))/(sqrt(length(na.omit(TX$wei))))
se.wei.BM <-(sd(BM$wei, na.rm=TRUE))/(sqrt(length(na.omit(BM$wei))))
se.egg.TX <-(sd(TX$egg, na.rm=TRUE))/(sqrt(length(na.omit(TX$egg))))
se.egg.BM <-(sd(BM$egg, na.rm=TRUE))/(sqrt(length(na.omit(BM$egg))))
#bind into vector
se.wei <- cbind(se.wei.TX, se.wei.BM)
se.egg <- cbing(se.egg.TX, se.egg.BM)
mean.wei <- cbind(mean.wei.TX, mean.wei.BM)
mean.egg <- cbind(mean.egg.TX, mean.egg.BM)
se.egg <- cbing(se.egg.TX, se.egg.BM)
se.egg <- cbind(se.egg.TX, se.egg.BM)
x <- c(1:2)
plot(x, mean.egg, type='b', lty=0, xlim=c(0.5, 2.5),
xlab="Species", ylim=c(0, 14), ylab="Eggs", axes=FALSE)
axis(1, at=c(0.5, 1, 2, 2.5), labels=c("","Great tit", "Blue tit",  ""))
axis(2, at=seq(0, 14, 2))
errbar(x, mean.egg, mean.egg + se.egg, mean.egg - se.egg, add=TRUE)
plot(x, mean.wei, type='b', lty=0, xlim=c(0.5, 2.5),
xlab="Species", ylim=c(0, 14), ylab="Wight", axes=FALSE)
axis(1, at=c(0.5, 1, 2, 2.5), labels=c("","Great tit", "Blue tit",  ""))
axis(2, at=seq(0, 14, 2))
errbar(x, mean.wei, mean.wei + se.wei, mean.wei - se.wei, add=TRUE)
#build the err plot for weight
plot(x, mean.wei, type='b', lty=0, xlim=c(0.5, 2.5),
xlab="Species", ylim=c(0, 14), ylab="Weght", axes=FALSE)
axis(1, at=c(0.5, 1, 2, 2.5), labels=c("","Great tit", "Blue tit",  ""))
axis(2, at=seq(0, 20, 2))
errbar(x, mean.wei, mean.wei + se.wei, mean.wei - se.wei, add=TRUE)
#build the err plot for weight
plot(x, mean.wei, type='b', lty=0, xlim=c(0.5, 2.5),
xlab="Species", ylim=c(0, 20), ylab="Weght", axes=FALSE)
axis(1, at=c(0.5, 1, 2, 2.5), labels=c("","Great tit", "Blue tit",  ""))
axis(2, at=seq(0, 20, 2))
errbar(x, mean.wei, mean.wei + se.wei, mean.wei - se.wei, add=TRUE)
#build the err plot for weight
plot(x, mean.wei, type='b', lty=0, xlim=c(0.5, 2.5),
xlab="Species", ylim=c(10, 20), ylab="Weght", axes=FALSE)
axis(1, at=c(0.5, 1, 2, 2.5), labels=c("","Great tit", "Blue tit",  ""))
axis(2, at=seq(10, 20, 2))
errbar(x, mean.wei, mean.wei + se.wei, mean.wei - se.wei, add=TRUE)
rm(list=ls())
setwd("~/Documents/courses/stats/Ex_3")
read.csv("forest.csv")
forest -> read.csv("forest.csv")
forest <- read.csv("forest.csv")
forest <- read.csv("forest.csv", sep=';')
str(forest)
View(forest)
header = TRUE, sep=';', row.names = NULL)
forest <- read.csv("http://wallace.teorekol.lu.se/
statistics_for_biologists/03/forest.csv",
header = TRUE, sep=';', row.names = NULL)
forest <- read.csv("forest.csv",header = TRUE, sep=';', row.names = NULL)
boxplot(forest$oak~forest$site, xlab="Site", ylab="Oak")
boxplot(forest$ald~forest$site, xlab="Site", ylab="Ald")
summary(forest)
av.forest <- aggregate(forest, by=list(forest$site), FUN=mean, na.rm=TRUE)
var.forest <- aggregate(forest, by=list(forest$site), FUN=var, na.rm=TRUE)
site.names <- factor(av.forest$Group.1)
n.forest <- table(forest$site)
n.forest
se.forest <- sqrt(var.forest/n.forest)
se.forest <- cbind(se.forest, site.names)
xvals <- barplot(av.forest$oak, xlab="Site", ylab="Oak", ylim=c(0,1))
axis(1, at=xvals, labels=c(site.names))
axis(1, at=xvals, labels=site.names)
xvals <- barplot(av.forest$oak, xlab="Site", ylab="Oak", ylim=c(0,1))
axis(1, at=xvals, labels=site.names)
av.forest$oak - se.forest$oak, code=3, angle=90, length=0.1)
arrows(xvals, av.forest$oak + se.forest$oak, xvals,
av.forest$oak - se.forest$oak, code=3, angle=90, length=0.1)
